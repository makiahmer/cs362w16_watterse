        -:    0:Source:unittest2.c
        -:    0:Graph:unittest2.gcno
        -:    0:Data:unittest2.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:#include <assert.h>
        -:    8:
        -:    9:
        2:   10:int main(){
        -:   11:	
        -:   12:	struct gameState g;
        -:   13:
        2:   14:	g.hand[0][0] = copper;
        2:   15:	g.hand[0][1] = silver;
        2:   16:	g.hand[0][2] = gold;
        -:   17:	
        -:   18:	int total; 
        -:   19:	int i;
        -:   20:	
        -:   21:	
        8:   22:	for (i = 0; i < 3; i ++){
        6:   23:		printf("what is in hand : %d \n", g.hand[0][i]);
        -:   24:		
        -:   25:		//increment handCount when there is a valid card in hand
        6:   26:		if (g.hand[0][i] >= 0 && g.hand[0][i] <= 26){
        6:   27:			g.handCount[0]++;
        -:   28:		}
        -:   29:	}
        -:   30:	
        -:   31:	
        2:   32:	printf ("I have %d in hand \n",g.handCount[0]);
        -:   33:	//printf ("numHandCards(&g) is : %d \n", numHandCards(&g));
        -:   34:	
        2:   35:	updateCoins(0,&g,5);
        -:   36:	
        2:   37:	total = g.coins;
        2:   38:    printf("total coin is : %d \n", total);
        -:   39:	
        2:   40:	assert (total == 11);
        -:   41:	
        2:   42:	return 0;
        -:   43:}
