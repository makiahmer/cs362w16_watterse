        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:3
        -:    0:Programs:1
        -:    1:#include "assert.h"
        -:    2:#include "dominion.h"
        -:    3:#include <stdio.h>
        -:    4:#include "rngs.h"
        -:    5:#include <stdlib.h>
        -:    6:
        -:    7:
        -:    8:// test to ensure isGameOver works
        -:    9:
        3:   10:int main (int argc, char** argv) {
        -:   11:  struct gameState G;
        3:   12:  struct gameState *p = &G;
        -:   13:
        -:   14:  int k[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, 
        3:   15:	       sea_hag, tribute, smithy};
        -:   16:
        3:   17:  printf ("Starting game.\n");
        -:   18:  
        -:   19:  
        -:   20:  // set up game
        3:   21:  initializeGame(2, k, 5, p);
        -:   22:  
        3:   23:  int money = 0;
        3:   24:  int i=0;
        3:   25:  int check = 0;
        -:   26:
        -:   27:
        -:   28:do{
      105:   29:    money = 0;
        -:   30:	
      630:   31:    for (i = 0; i < numHandCards(p); i++) {
      525:   32:      if (handCard(i, p) == copper)
      183:   33:    money++;
      342:   34:      else if (handCard(i, p) == silver)
      129:   35:    money += 2;
      213:   36:      else if (handCard(i, p) == gold)
       45:   37:    money += 3;
        -:   38:
        -:   39:    }
        -:   40:	// player 0 buys card 
      105:   41:    if (whoseTurn(p) == 0) {
        -:   42:		
        3:   43:      if (money >= 8) {
    #####:   44:        printf("0: bought province\n"); 
    #####:   45:        buyCard(province, p);
        -:   46:      }
        3:   47:      else if (money >= 6) {
    #####:   48:        printf("0: bought gold\n"); 
    #####:   49:        buyCard(gold, p);
        -:   50:      }
        -:   51:	  
        3:   52:	  else if (money >= 5) {
    #####:   53:        printf("0: bought duchy\n"); 
    #####:   54:        buyCard(duchy, p);
        -:   55:      }
        3:   56:      else if (money >= 3) {
        3:   57:        printf("0: bought silver\n"); 
        3:   58:        buyCard(silver, p);
        -:   59:      }
        -:   60:
        3:   61:      printf("0: end turn\n");
        3:   62:      endTurn(p);
        -:   63:    }
        -:   64:	// player 1 buys card 
        -:   65:    else {
        -:   66:
      102:   67:      if (money >= 8) {
       24:   68:        printf("0: bought province\n"); 
       24:   69:        buyCard(province, p);
        -:   70:      }
       78:   71:      else if (money >= 6) {
       24:   72:        printf("0: bought gold\n"); 
       24:   73:        buyCard(gold, p);
        -:   74:      }
        -:   75:	  
       54:   76:	  else if (money >= 5) {
       15:   77:        printf("0: bought duchy\n"); 
       15:   78:        buyCard(duchy, p);
        -:   79:      }
       39:   80:      else if (money >= 3) {
       36:   81:        printf("0: bought silver\n"); 
       36:   82:        buyCard(silver, p);
        -:   83:      }
        -:   84:
      102:   85:      printf("0: end turn\n");
      102:   86:      endTurn(p);
        -:   87:      
      102:   88:      endTurn(p);      
        -:   89:    }
        -:   90:
      105:   91:      printf ("Player 0: %d\nPlayer 1: %d\n", scoreFor(0, p), scoreFor(1, p));
        -:   92:	
      105:   93:	check = isGameOver(p);
      105:   94:	assert (check == 0 || check == 1);
      105:   95:  }  while (!check);
        -:   96:
        3:   97:  printf ("Finished game.\n");
        3:   98:  printf ("Player 0: %d\nPlayer 1: %d\n", scoreFor(0, p), scoreFor(1, p));
        3:   99:  printf ("Unit test 1 for isGameOver, result check: %d\n", check);
        3:  100:  if (check == 1){
        3:  101:	  printf ("game over complete\n");
        -:  102:  }
        -:  103:
        3:  104:  return 0;
        -:  105:}